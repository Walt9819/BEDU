print("hello World")
sqrt(10)
log(1)
exp(2)
?mean
??mean
class(12)
typeof(12)
?matrix
max(100/4, 108/5, 200/20, sqrt(81), 35)
install.packages("dplyr")
library(dplyr)
saludo <- function(nombre) {}
saludo <- function(nombre) { return(paste("Hola", nombre)) }
saludo("Walt")
q()
install.packages("shiny")
library(shiny)
runExample("01_hello")
q()
?table
# Load data from source
data <- read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
getwd()
setwd("D:/Documentos/BEDU/mod2/sesion01/data/SP1.csv")
setwd("D:/Documentos/BEDU/mod2/sesion01")
# Load data from source
data <- read.csv("data/SP1.csv")
# Load data from source
data <- read.csv("data/SP1.csv")
View(data)
data.goals <- as.table(data$FTHG, data$FTAG)
data.goals
data$FTHG
typeof(data)
# Load data from source
data <- as.data.frame(read.csv("data/SP1.csv"))
typeof(data)
# Load data from source
data <- data.frame(read.csv("data/SP1.csv"))
View(data)
data$FTHG
# Load data from source
data <- read.csv("data/SP1.csv")
data$FTHG
# Home goals absolute frequency table
hg.frquencyT <- table(data$FTHG)
hg.frquencyT
# Away goals absolute frequency table
ag.freqT <- table(data$FTAG)
ag.freqT
library(dplyr)
# Home goals absolute frequency table
hg.freqT <- table(data$FTHG) ./ sum(data$FTHG)
# Home goals absolute frequency table
hg.freqT <- table(data$FTHG) / sum(data$FTHG)
sum(data$FTHG)
hg.freqT
sum(hg.freqT)
sum(data$FTHG)
table(data$FTHG)
sum(table(data$FTHG))
hg.relFreqT <- hg.freqT / sum(hg.freqT)
hg.relFreqT
sum(hg.relFreqT)
hg.relFreqT[1]
hg.relFreqT[2]
hg.relFreqT[3]
for (i in 1:length(hg.relFreqT)) {
paste("La probabilidad (marginal) de que el equipo de casa anote ", i, " goles es ", hg.relFreqT[i])
}
for (i in 1:length(hg.relFreqT)) {
print(paste("La probabilidad (marginal) de que el equipo de casa anote ", i, " goles es ", hg.relFreqT[i]))
}
hg.relFreqT[1, ]
colnames(hg.relFreqT)
divnames(hg.relFreqT)
dimnames(hg.relFreqT)
for (i in 1:length(hg.relFreqT)) {
print(paste("La probabilidad (marginal) de que el equipo de casa anote ", dimnames(hg.relFreqT)[i], " goles es ", hg.relFreqT[i]))
}
for (i in 1:length(hg.relFreqT)) {
print(paste("La probabilidad (marginal) de que el equipo de casa anote ", (dimnames(hg.relFreqT))[i], " goles es ", hg.relFreqT[i]))
}
typeof(dimnames(hg.relFreqT))
typeof(dimnames(hg.relFreqT)[1])
typeof(dimnames(hg.relFreqT)[1, ])
typeof(dimnames(hg.relFreqT)[, 1])
typeof(dimnames(hg.relFreqT)[2])
dimnames(hg.relFreqT)[2]
dimnames(hg.relFreqT)[1][1]
dimnames(hg.relFreqT)[[1]]
dimnames(hg.relFreqT)[[1]][1]
dimnames(hg.relFreqT)[[1]][2]
dimnames(hg.relFreqT)[[1]][3]
for (i in 1:length(hg.relFreqT)) {
print(paste("La probabilidad (marginal) de que el equipo de casa anote ", dimnames(hg.relFreqT)[[1]][i], " goles es ", hg.relFreqT[i]))
}
for (i in 1:length(hg.relFreqT)) {
print(paste("La probabilidad (marginal) de que el equipo de casa anote", dimnames(hg.relFreqT)[[1]][i], "goles es: ", hg.relFreqT[i]))
}
for (i in 1:length(hg.relFreqT)) {
print(paste("La probabilidad (marginal) de que el equipo de casa anote", dimnames(hg.relFreqT)[[1]][i], "goles es:", hg.relFreqT[i]))
}
# Away goals absolute frequency table
ag.freqT <- table(data$FTAG)
# Divide by the sum for relative frequency
ag.relFreqT <- ag.freqT / sum(ag.freqT)
for (i in 1:length(ag.relFreqT)) {
print(paste("La probabilidad (marginal) de que el equipo visitante anote", dimnames(ag.relFreqT)[[1]][i], "goles es:", ag.relFreqT[i]))
}
sum(ag.relFreqT)
ag.relFreqT * hg.relFreqT
ag.relFreqT *.* hg.relFreqT
ag.relFreqT .*. hg.relFreqT
ag.relFreqT %.% hg.relFreqT
ag.relFreqT %*% hg.relFreqT
hg.relFreqT %-% ag.relFreqT
hg.relFreqT %*% ag.relFreqT
typeof(hg.relFreqT)
typeof(ag.relFreqT)
class(ag.relFreqT)
class(hg.relFreqT)
hg.relFreqT %.% ag.relFreqT
hg.relFreqT %*% ag.relFreqT
hg.relFreqT[1] %*% ag.relFreqT
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
for (i in 1:length(hg.relFreqT)) {
cum.Prob <- hg.relFreqT[i] * ag.relFreqT
for (j in 1:length(ag.relFreqT)) {
print(paste("La probabilidad (conjunta) de que el equipo local anote",
dimnames(hg.relFreqT)[[1]][i],
"goles y que el equipo visitante anote",
dimnames(hg.relFreqT)[[1]][j],
"goles es:",
cum.Prob[j]))
}
}
goals.cumProb <- matrix()
for (i in 1:length(hg.relFreqT)) {
cum.Prob <- hg.relFreqT[i] * ag.relFreqT
goals.cumProb[i] <- cum.Prob
for (j in 1:length(ag.relFreqT)) {
print(paste("La probabilidad (conjunta) de que el equipo local anote",
dimnames(hg.relFreqT)[[1]][i],
"goles y que el equipo visitante anote",
dimnames(hg.relFreqT)[[1]][j],
"goles es:",
cum.Prob[j]))
}
}
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix
goals.cumProb <- matrix(, nrow = 0, ncol = 0)
for (i in 1:length(hg.relFreqT)) {
cum.Prob <- hg.relFreqT[i] * ag.relFreqT
goals.cumProb <- cbind(goals.cumProb, cum.Prob)
for (j in 1:length(ag.relFreqT)) {
print(paste("La probabilidad (conjunta) de que el equipo local anote",
dimnames(hg.relFreqT)[[1]][i],
"goles y que el equipo visitante anote",
dimnames(hg.relFreqT)[[1]][j],
"goles es:",
cum.Prob[j]))
}
}
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix
goals.cumProb <- matrix(, nrow = len.HGgoals, ncol = len.AGgoals)
# Get number of items on HG goals
len.HGgoals = length(hg.relFreqT)
# Get number of items on AG goals
len.AGgoals = length(ag.relFreqT)
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix
goals.cumProb <- matrix(, nrow = len.HGgoals, ncol = len.AGgoals)
for (i in 1:len.HGgoals) {
cum.Prob <- hg.relFreqT[i] * ag.relFreqT
goals.cumProb[i] <- cum.Prob
for (j in 1:len.AGgoals) {
print(paste("La probabilidad (conjunta) de que el equipo local anote",
dimnames(hg.relFreqT)[[1]][i],
"goles y que el equipo visitante anote",
dimnames(hg.relFreqT)[[1]][j],
"goles es:",
cum.Prob[j]))
}
}
goals,cum.Prob
goals.cumProb
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix
goals.cumProb <- matrix(NULL, nrow = len.HGgoals, ncol = len.AGgoals)
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix
goals.cumProb <- matrix(, nrow = len.HGgoals, ncol = len.AGgoals)
goals.cumProb
for (i in 1:len.HGgoals) {
cum.Prob <- hg.relFreqT[i] * ag.relFreqT
goals.cumProb[i] <- cum.Prob
for (j in 1:len.AGgoals) {
print(paste("La probabilidad (conjunta) de que el equipo local anote",
dimnames(hg.relFreqT)[[1]][i],
"goles y que el equipo visitante anote",
dimnames(hg.relFreqT)[[1]][j],
"goles es:",
cum.Prob[j]))
}
}
goals.cumProb
for (i in 1:len.HGgoals) {
cum.Prob <- hg.relFreqT[i] * ag.relFreqT
goals.cumProb[i, ] <- cum.Prob
for (j in 1:len.AGgoals) {
print(paste("La probabilidad (conjunta) de que el equipo local anote",
dimnames(hg.relFreqT)[[1]][i],
"goles y que el equipo visitante anote",
dimnames(hg.relFreqT)[[1]][j],
"goles es:",
cum.Prob[j]))
}
}
goals.cumProb
max(goals.cumProb)
which(max(goals.cumProb))
which(goals.cumProb == max(goals.cumProb))
which(goals.cumProb == max(goals.cumProb))
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix (empty)
goals.cumProb <- matrix(rep(NULL, len.HGgoals*len.AGgoals), nrow = len.HGgoals, ncol = len.AGgoals)
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix (empty)
goals.cumProb <- matrix(rep(c(NULL), len.HGgoals), len.AGgoals), nrow = len.HGgoals, ncol = len.AGgoals)
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix (empty)
goals.cumProb <- matrix(rep(c(rep(NULL, len.HGgoals)), len.AGgoals), nrow = len.HGgoals, ncol = len.AGgoals)
rep(c(rep(NULL, len.HGgoals))
)
rep(c(rep(NULL, len.HGgoals)), len.AGgoals)
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix (empty)
goals.cumProb <- matrix(, nrow = len.HGgoals, ncol = len.AGgoals)
for (i in 1:len.HGgoals) {
cum.Prob <- hg.relFreqT[i] * ag.relFreqT
goals.cumProb[i, ] <- cum.Prob
for (j in 1:len.AGgoals) {
print(paste("La probabilidad (conjunta) de que el equipo local anote",
dimnames(hg.relFreqT)[[1]][i],
"goles y que el equipo visitante anote",
dimnames(hg.relFreqT)[[1]][j],
"goles es:",
cum.Prob[j]))
}
}
goals.cumProb
#### LOAD DATA ####
# Set where my files are located
setwd("D:/Documentos/BEDU/mod2/sesion01")
# Load data from source
data <- read.csv("data/SP1.csv")
#### HOME GOALS PROBABILITY ####
# Home goals absolute frequency table
hg.freqT <- table(data$FTHG)
# Divide by the sum for relative frequency
hg.relFreqT <- hg.freqT / sum(hg.freqT)
# Get number of items on HG goals
len.HGgoals = length(hg.relFreqT)
for (i in 1:len.HGgoals) {
print(paste("La probabilidad (marginal) de que el equipo local anote", dimnames(hg.relFreqT)[[1]][i], "goles es:", hg.relFreqT[i]))
}
#### AWAY GOALS PROBABILITY ####
# Away goals absolute frequency table
ag.freqT <- table(data$FTAG)
# Divide by the sum for relative frequency
ag.relFreqT <- ag.freqT / sum(ag.freqT)
# Get number of items on AG goals
len.AGgoals = length(ag.relFreqT)
for (i in 1:len.AGgoals) {
print(paste("La probabilidad (marginal) de que el equipo visitante anote", dimnames(ag.relFreqT)[[1]][i], "goles es:", ag.relFreqT[i]))
}
#### CUMULATIVE PROBABILITY OF INDEPENDENT EVENTS ####
# If so, save results into a matrix (empty)
goals.cumProb <- matrix(, nrow = len.HGgoals, ncol = len.AGgoals)
for (i in 1:len.HGgoals) {
cum.Prob <- hg.relFreqT[i] * ag.relFreqT
goals.cumProb[i, ] <- cum.Prob
for (j in 1:len.AGgoals) {
print(paste("La probabilidad (conjunta) de que el equipo local anote",
dimnames(hg.relFreqT)[[1]][i],
"goles y que el equipo visitante anote",
dimnames(hg.relFreqT)[[1]][j],
"goles es:",
cum.Prob[j]))
}
}
# Result matrix (HG goals as rows, AG goals as columns) and values as cumulative probabilities
goals.cumProb
# Result matrix (HG goals as rows, AG goals as columns) and values as cumulative probabilities
sum(goals.cumProb)
